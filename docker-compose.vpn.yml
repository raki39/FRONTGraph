# Docker Compose para VPN - IP: 192.168.10.35
# Cópia EXATA do docker-compose.yml normal, só mudando URLs para VPN

services:
  postgres:
    image: pgvector/pgvector:pg15
    environment:
      POSTGRES_DB: agentgraph
      POSTGRES_USER: agent
      POSTGRES_PASSWORD: agent
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    command: postgres -c shared_preload_libraries=vector

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes

  api:
    build:
      context: .
      dockerfile: api/Dockerfile
    environment:
      PG_HOST: postgres
      PG_PORT: 5432
      PG_DB: agentgraph
      PG_USER: agent
      PG_PASSWORD: agent
      DATA_DIR: /shared-data
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      # CORS - IMPORTANTE: Incluir IP da VPN
      ALLOWED_ORIGINS: http://192.168.10.35:3000,http://localhost:3000,http://localhost:5173
      # Keys e observabilidade
      HUGGINGFACE_API_KEY: ${HUGGINGFACE_API_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      GOOGLE_API_KEY: ${GOOGLE_API_KEY}
      LANGSMITH_API_KEY: ${LANGSMITH_API_KEY}
      LANGSMITH_TRACING: ${LANGSMITH_TRACING}
      LANGSMITH_ENDPOINT: ${LANGSMITH_ENDPOINT}
      LANGSMITH_PROJECT: ${LANGSMITH_PROJECT}
      # Compatibilidade com .env legado do agente
      USE_CELERY: ${USE_CELERY}
      REDIS_URL: ${REDIS_URL}
      REDIS_RESULT_BACKEND: ${REDIS_RESULT_BACKEND}
      CELERY_DEBUG: ${CELERY_DEBUG}
      CELERY_ENABLED: ${CELERY_ENABLED}
      CELERY_WORKER_PREFETCH_MULTIPLIER: ${CELERY_WORKER_PREFETCH_MULTIPLIER}
      CELERY_TASK_MAX_RETRIES: ${CELERY_TASK_MAX_RETRIES}
      CELERY_TASK_DEFAULT_RETRY_DELAY: ${CELERY_TASK_DEFAULT_RETRY_DELAY}
    depends_on:
      - postgres
      - redis
    ports:
      - "8000:8000"
    volumes:
      - shared-data:/shared-data
    extra_hosts:
      - "host.docker.internal:host-gateway"

  worker:
    build:
      context: .
      dockerfile: worker/Dockerfile
    environment:
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      PG_HOST: postgres
      PG_PORT: 5432
      PG_DB: agentgraph
      PG_USER: agent
      PG_PASSWORD: agent
      # Keys e observabilidade
      HUGGINGFACE_API_KEY: ${HUGGINGFACE_API_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      GOOGLE_API_KEY: ${GOOGLE_API_KEY}
      LANGSMITH_API_KEY: ${LANGSMITH_API_KEY}
      LANGSMITH_TRACING: ${LANGSMITH_TRACING}
      LANGSMITH_ENDPOINT: ${LANGSMITH_ENDPOINT}
      LANGSMITH_PROJECT: ${LANGSMITH_PROJECT}
      # Compatibilidade com .env legado do agente
      USE_CELERY: ${USE_CELERY}
      REDIS_URL: ${REDIS_URL}
      REDIS_RESULT_BACKEND: ${REDIS_RESULT_BACKEND}
      CELERY_DEBUG: ${CELERY_DEBUG}
      CELERY_ENABLED: ${CELERY_ENABLED}
      CELERY_WORKER_PREFETCH_MULTIPLIER: ${CELERY_WORKER_PREFETCH_MULTIPLIER}
      CELERY_TASK_MAX_RETRIES: ${CELERY_TASK_MAX_RETRIES}
      CELERY_TASK_DEFAULT_RETRY_DELAY: ${CELERY_TASK_DEFAULT_RETRY_DELAY}
    depends_on:
      - redis
      - postgres
    volumes:
      - shared-data:/shared-data
    extra_hosts:
      - "host.docker.internal:host-gateway"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      # IMPORTANTE: URL da API usando IP da VPN
      NEXT_PUBLIC_API_BASE_URL: http://192.168.10.35:8000
    depends_on:
      - api
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next

volumes:
  pgdata:
  shared-data:
